pi@raspberrypi:~ $ wolfram
Wolfram Language 11.0.1 Engine for Linux ARM (32-bit)
Copyright 1988-2017 Wolfram Research, Inc.

In[1]:= CellularAutomaton[{{0,0,_}->0,{0,1,0}->0,{0,1,1}->1,{1,0,0}->0,{1,0,1}->
1,{1,1,0}->1,{1,1,1}->0},{{1,1,1,0,1,1,0,1,0,1,0,1,0,1,0,0,1},0},12]            

Out[1]= {{1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1}, 
 
>    {1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0}, 
 
>    {0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0}, 
 
>    {0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0}, 
 
>    {0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0}, 
 
>    {0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0}, 
 
>    {0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0}, 
 
>    {0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, 
 
>    {0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 
>    {0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 
>    {0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 
>    {0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
 
>    {0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}

In[2]:= Print @@@ (% /. {1 -> "#", 0 -> "."});                                  
###.##.#.#.#.#..#
#.#####.#.#.#....
.##...##.#.#.....
.##...###.#......
.##...#.##.......
.##....###.......
.##....#.#.......
.##.....#........
.##..............
.##..............
.##..............
.##..............
.##..............

In[3]:= CellularAutomaton[2^^01101000 (* == 104 *), {{1,1,1,0,1,1,0,1,0,1,0,1,0,
1,0,0,1}, 0}, 12];                                                              

In[4]:= Print @@@ (% /. {1 -> "#", 0 -> "."});                                  
###.##.#.#.#.#..#
#.#####.#.#.#....
.##...##.#.#.....
.##...###.#......
.##...#.##.......
.##....###.......
.##....#.#.......
.##.....#........
.##..............
.##..............
.##..............
.##..............
.##..............

In[5]:= CellularAutomaton[{224,{2,{{2,2,2},{2,1,2},{2,2,2}}},{1,1}}, startconfig
uration, steps];                                                                

CellularAutomaton::initn: 
   The initial condition specification startconfiguration
     should be of the form aspec, {aspec, bspec}, or {{{aspec1, off1}, {aspec2,
     off2},... {aspecn, offn}}, bspec} (n > 0). Each aspec must be a non-empty
     rank 2 array whose elements at level 2
     are integers i in the range 0 <= i <= 1.

In[6]:= results=CellularAutomaton[{224,{2,{{2,2,2},{2,1,2},{2,2,2}}},{1,1}},{{{0
,1,0},{0,0,1},{1,1,1}},0},8];                                                   

In[7]:=  Do[Print[i-1];Print[Grid[results[[i]]/.{1->"#",0->"."}]];,{i,1,Length[r
esults]}]                                                                       
0
.   #   .   .   .

.   .   #   .   .

#   #   #   .   .

.   .   .   .   .

.   .   .   .   .
1
.   .   .   .   .

#   .   #   .   .

.   #   #   .   .

.   #   .   .   .

.   .   .   .   .
2
.   .   .   .   .

.   .   #   .   .

#   .   #   .   .

.   #   #   .   .

.   .   .   .   .
3
.   .   .   .   .

.   #   .   .   .

.   .   #   #   .

.   #   #   .   .

.   .   .   .   .
4
.   .   .   .   .

.   .   #   .   .

.   .   .   #   .

.   #   #   #   .

.   .   .   .   .
5
.   .   .   .   .

.   .   .   .   .

.   #   .   #   .

.   .   #   #   .

.   .   #   .   .
6
.   .   .   .   .

.   .   .   .   .

.   .   .   #   .

.   #   .   #   .

.   .   #   #   .
7
.   .   .   .   .

.   .   .   .   .

.   .   #   .   .

.   .   .   #   #

.   .   #   #   .
8
.   .   .   .   .

.   .   .   .   .

.   .   .   #   .

.   .   .   .   #

.   .   #   #   #

In[8]:= CellularAutomaton[{224,{2,{{2,2,2},{2,1,2},{2,2,2}}},{1,1}},{{{0        
        ,1,0},{0,0,1},{1,1,1}},0},8];                                           

In[9]:= fun[lst_, t_] := Mod[Total[lst], 3]                                     

In[10]:= With[{init = {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, nsteps = 10, r = 1},   
            res = CellularAutomaton[{fun, {}, r}, init, nsteps]]                

Out[10]= {{0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0}, 
 
>    {0, 0, 0, 1, 2, 0, 2, 1, 0, 0, 0}, {0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0}, 
 
>    {0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0}, {1, 2, 0, 0, 0, 0, 0, 0, 0, 2, 1}, 
 
>    {1, 0, 2, 0, 0, 0, 0, 0, 2, 0, 1}, {2, 0, 2, 2, 0, 0, 0, 2, 2, 0, 2}, 
 
>    {1, 1, 1, 1, 2, 0, 2, 1, 1, 1, 1}, {0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0}, 
 
>    {0, 0, 1, 1, 2, 1, 2, 1, 1, 0, 0}}

In[11]:= ArrayPlot[res]                                                         

Out[11]= -Graphics-

In[12]:=                                                                        
