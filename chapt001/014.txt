
pi@raspberrypi:~ $ wolfram
Wolfram Language (Raspberry Pi Pilot Release)
Copyright 1988-2016 Wolfram Research
Information & help: wolfram.com/raspi

In[1]:= (3 + Sqrt[2])^3                                                         

                     3
Out[1]= (3 + Sqrt[2])

In[2]:= Expand [ % ]                                                            

Out[2]= 45 + 29 Sqrt[2]

In[3]:= N[ % ]                                                                  

Out[3]= 86.0122

In[4]:= Integrate[ Sin[Sin[x]], {x, 1, 2}]                                      

Out[4]= Integrate[Sin[Sin[x]], {x, 1, 2}]

In[5]:= ]                                                                       

Syntax::sntxb: Expression cannot begin with "]".


In[6]:= Integrate[ Sin[Sin[x]], {x, 1, 2}]                                      

Out[6]= Integrate[Sin[Sin[x]], {x, 1, 2}]

In[7]:= N[ % ]                                                                  

Out[7]= 0.81645

In[8]:= NIntegrate[Sin[Sin[x]], {x, 1, 2}]                                      

Out[8]= 0.81645

In[9]:= NSum[1/i^3, {i, 1, Infinity}]                                           

Out[9]= 1.20206

In[10]:= NIntegrate[1/Sqrt[x], {x, 0, 1}]                                       

Out[10]= 2.

In[11]:= NIntegrate[Exp[1/Sqrt[x], {x, 0, 1}]                                   
                                                                                
         ]                                                                      

NIntegrate::argmu: 
   NIntegrate called with 1 argument; 2 or more arguments are expected.

                           1
Out[11]= NIntegrate[Exp[-------, {x, 0, 1}]]
                        Sqrt[x]

In[12]:= NIntegrate[Exp[-x^2], {x, -Infinity, Infinity}]                        

Out[12]= 1.77245

In[13]:= NIntegrate[Sin [ x y ], {x, 0, 1}, {y, 0, x}]                          

Out[13]= 0.119906

In[14]:= NSolve[x^5 + x + 1 == 0, x]                                            

Out[14]= {{x -> -0.754878}, {x -> -0.5 - 0.866025 I}, {x -> -0.5 + 0.866025 I}, 
 
>    {x -> 0.877439 - 0.744862 I}, {x -> 0.877439 + 0.744862 I}}

In[15]:= NSolve[{x + y == 2, x - 3 y + z == 3, x - y + z == 0}, {x, y, z}]      

Out[15]= {{x -> 3.5, y -> -1.5, z -> -5.}}

In[16]:= FindRoot[3 Cos[x] == Log[x], {x, 1}]                                   

Out[16]= {x -> 1.44726}

In[17]:= FindRoot[3 Cos[x] == Log[x], {x, 10}]                                  

Out[17]= {x -> 13.1064}

In[18]:= FindRoot[{x == Log[y], y == Log[x]}, {x, 1}, {y, 2}]                   

FindRoot::cvmit: 
   Failed to converge to the requested accuracy or precision within 100
     iterations.

Out[18]= {x -> 0.689226, y -> 1.43899}

In[19]:= NDSolve[{y' [x] == y[x]. y[0] == 1, y, {x, 0, 2}]                      

Syntax::sntxf: "NDSolve[{y' [x] == y[x]. y[0] == 1, y, {x, 0, 2}"
     cannot be followed by "]".


In[20]:= NDSolve[{y'[x] == y[x]. y[0] == 1}, y, {x, 0, 2}]                      

NDSolve::overdet: 
   There are fewer dependent variables, {y[x]}
    , than equations, so the system is overdetermined.

Out[20]= NDSolve[{y'[x] == y[x] . y[0] == 1}, y, {x, 0, 2}]

In[21]:= y[1.5] /. %                                                            

ReplaceAll::reps: 
   {NDSolve[{y'[x] == y[x] . y[0] == 1}, y, {x, 0, 2}]}
     is neither a list of replacement rules nor a valid dispatch table, and so
     cannot be used for replacing.

Out[21]= y[1.5] /. NDSolve[{y'[x] == y[x] . y[0] == 1}, y, {x, 0, 2}]

In[22]:= NDSolve[{y'[x] == z[x], z'[x] == -y[x], y[0] == 0, z[0] == 1}, {y, z}, 
{x, 0, Pi}]                                                                     

Out[22]= {{y -> InterpolatingFunction[{{0., 3.14159}}, <>], 
 
>     z -> InterpolatingFunction[{{0., 3.14159}}, <>]}}

In[23]:= z[2] /. %                                                              

Out[23]= {-0.416147}

In[24]:=                                                                        
