pi@raspberrypi:~ $ wolfram
Wolfram Language 11.0.1 Engine for Linux ARM (32-bit)
Copyright 1988-2017 Wolfram Research, Inc.

In[1]:= t = Series[ ArcTan[x], {x, 0, 8}]                                       

             3    5    7
            x    x    x        9
Out[1]= x - -- + -- - -- + O[x]
            3    5    7

In[2]:= t^2                                                                     

                4       6       8
         2   2 x    23 x    44 x        10
Out[2]= x  - ---- + ----- - ----- + O[x]
              3      45      105

In[3]:= Normal[%]                                                               

                4       6       8
         2   2 x    23 x    44 x
Out[3]= x  - ---- + ----- - -----
              3      45      105

In[4]:= Factor[%]                                                               

           2              2        4        6
        -(x  (-315 + 210 x  - 161 x  + 132 x ))
Out[4]= ---------------------------------------
                          315

In[5]:= y = 1 + Sum[a[i] x^i, {i, 3}] + 0[x]+4                                  

                             2         3
Out[5]= 5 + 0[x] + x a[1] + x  a[2] + x  a[3]

In[6]:= D[y, x]^2 - y == x                                                      

                              2         3
Out[6]= -5 - 0[x] - x a[1] - x  a[2] - x  a[3] + 
 
                            2      2
>     (a[1] + 2 x a[2] + 3 x  a[3])  == x

In[7]:= LogicalExpand[ % ]                                                      

                              2         3
Out[7]= -5 - 0[x] - x a[1] - x  a[2] - x  a[3] + 
 
                            2      2
>     (a[1] + 2 x a[2] + 3 x  a[3])  == x

In[8]:= Solve[ % ]                                                              

Solve::ifun: Inverse functions are being used by Solve, so some solutions may
     not be found; use Reduce for complete solution information.

Out[8]= {{a[1] -> 
 
>      (-(x (-1 + 4 a[2] + 6 x a[3])) - 
 
                           2               2           3
>         Sqrt[20 + 4 x + x  + 4 0[x] - 4 x  a[2] - 8 x  a[3]]) / 2}, 
 
>    {a[1] -> (-(x (-1 + 4 a[2] + 6 x a[3])) + 
 
                           2               2           3
>         Sqrt[20 + 4 x + x  + 4 0[x] - 4 x  a[2] - 8 x  a[3]]) / 2}}

In[9]:= Cos[x^2] /. x -> 0                                                      

Out[9]= 1

In[10]:= Limit[ Sin[x]/x, x -> 0]                                               

Out[10]= 1

In[11]:= Limit[ Sin[x]/x^2, x -> 0]                                             

Out[11]= Infinity

In[12]:= Limit[ x Log[x], x -> 0]                                               

Out[12]= 0

In[13]:= Limit[ (1 + 2 x ) ^ (1/x), x -> 0]                                     

          2
Out[13]= E

In[14]:= Limit[ Sin[1/x], x -> 0]                                               

Out[14]= Interval[{-1, 1}]

In[15]:= (1 + %)^3                                                              

Out[15]= Interval[{0, 8}]

In[16]:= Limit[ Exp[a Sin[x]], x -> Infinity]                                   

          a Interval[{-1, 1}]
Out[16]= E

In[17]:= Plot[1/x, {x, -1, 1}]                                                  

Out[17]= -Graphics-

In[18]:= Limit[ 1/x, x -> 0, Direction -> 1]                                    

Out[18]= -Infinity

In[19]:= Limit[ 1/x, x -> 0, Direction -> -1]                                   

Out[19]= Infinity

In[20]:= Limit[x f[x], x -> 0]                                                  

Out[20]= Limit[x f[x], x -> 0]

In[21]:= Residue[1/x, {x, 0}]                                                   

Out[21]= 1

In[22]:= Residue[1/x^2, {x, 0}]                                                 

Out[22]= 0

In[23]:= Table[a[i, j], {i, 2}, {j, 2}]                                         

Out[23]= {{a[1, 1], a[1, 2]}, {a[2, 1], a[2, 2]}}

In[24]:= Array[a, {2,2}]                                                        

Out[24]= {{a[1, 1], a[1, 2]}, {a[2, 1], a[2, 2]}}

In[25]:= DiagonalMatrix[a, b, c]                                                

Out[25]= DiagonalMatrix[a, b, c]

In[26]:= DiagonalMatrix[{a, b, c}]                                              

Out[26]= {{a, 0, 0}, {0, b, 0}, {0, 0, c}}

In[27]:= IdentityMatrix{3}                                                      

Out[27]= {3 IdentityMatrix}

In[28]:= IdentityMatrix[3]                                                      

Out[28]= {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}

In[29]:= IdentityMatrix[4]                                                      

Out[29]= {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 1}}

In[30]:= Table[Random[ ], {2}, {2}]                                             

Out[30]= {{0.665429, 0.713118}, {0.913359, 0.901979}}

In[31]:= Table[Random[ ], {2}, {2}]                                             

Out[31]= {{0.744409, 0.456752}, {0.48117, 0.242036}}

In[32]:= Table[Random[ ], {3}, {3}]                                             

Out[32]= {{0.221272, 0.859589, 0.319873}, {0.739766, 0.41327, 0.454733}, 
 
>    {0.842961, 0.105069, 0.808057}}

In[33]:= MatrixForm[%]                                                          

Out[33]//MatrixForm= 0.221272   0.859589   0.319873

                     0.739766   0.41327    0.454733

                     0.842961   0.105069   0.808057

In[34]:= Table[Random[ ], {2}, {2}]                                             

Out[34]= {{0.86615, 0.827196}, {0.355315, 0.288539}}

In[35]:= MatrixForm[%]                                                          

Out[35]//MatrixForm= 0.86615    0.827196

                     0.355315   0.288539

In[36]:= Table[Switch[i-j, -1, a, 0, b, 1, c, _, 0], {i, 5}, {j, 5}]            

Out[36]= {{b, a, 0, 0, 0}, {c, b, a, 0, 0}, {0, c, b, a, 0}, {0, 0, c, b, a}, 
 
>    {0, 0, 0, c, b}}

In[37]:= MatrixForm[%]                                                          

Out[37]//MatrixForm= b   a   0   0   0

                     c   b   a   0   0

                     0   c   b   a   0

                     0   0   c   b   a

                     0   0   0   c   b

In[38]:=                                                                        
