pi@raspberrypi:~ $ wolfram
Wolfram Language 11.0.1 Engine for Linux ARM (32-bit)
Copyright 1988-2017 Wolfram Research, Inc.

In[1]:= Derivative[1][f][x,y]                                                   

Out[1]= f'[x, y]

In[2]:= f'[x,y]                                                                 

Out[2]= f'[x, y]

In[3]:= Derivative[1,1][f][x,y]                                                 

         (1,1)
Out[3]= f     [x, y]

In[4]:= Derivative[1,2][f][x,y]                                                 

         (1,2)
Out[4]= f     [x, y]

In[5]:= D[f[x,y], x, y] //FullForm                                              

Out[5]//FullForm= Derivative[1, 1][f][x, y]

In[6]:= D[f[x,y], x, y]//FullForm                                               

Out[6]//FullForm= Derivative[1, 1][f][x, y]

In[7]:= Derivative[1,1][f][x,y]                                                 

         (1,1)
Out[7]= f     [x, y]

In[8]:= Integrate[1/x,x]                                                        

Out[8]= Log[x]

In[9]:= Integrate[1/x,{x,1,10.0}]                                               

Out[9]= 2.30259

In[10]:= Clear[a,b];                                                            

In[11]:= Integrate[x^2, {x,a,b}]                                                

           3    3
         -a    b
Out[11]= --- + --
          3    3

In[12]:= Integrate[1/(x^3 + x^2), {x,1,Infinity}]                               

Out[12]= 1 - Log[2]

In[13]:= Integrate[Sin[2Pi zy/x]xyz,x,y,z]                                      

                                       2 Pi zy          2 Pi zy
Out[13]= xyz y z (-2 Pi zy CosIntegral[-------] + x Sin[-------])
                                          x                x

In[14]:= Integrate[Exp[-cx^2],{x,-Infinity,Infinity}]                           

         Infinity
Out[14]= --------
              2
            cx
           E

In[15]:= Integrate[Exp[-cx^2],{x,-Infinity,Infinity},Assumptions->c>0]          

         Infinity
Out[15]= --------
              2
            cx
           E

In[16]:= Integrate[Exp[-cx^2],{x,-Infinity,Infinity},GenerateConditions -> False
]                                                                               

         Infinity
Out[16]= --------
              2
            cx
           E

In[17]:= Integrate[Abs[x + Abs[x]^2],x.Assumptions -> Element[x,Reals]]         

Integrate::ilim: 
   Invalid integration variable or limit(s) in x . Assumptions -> x ∈ Reals.

                                 2
Out[17]= Integrate[Abs[x + Abs[x] ], x . Assumptions -> x ∈ Reals]

In[18]:= Integrate[Exp[1/(Log[x]+1)],{x,2,3}]                                   

                    1/(1 + Log[x])
Out[18]= Integrate[E              , {x, 2, 3}]

In[19]:= m y'' + k y = 0                                                        

Set::write: Tag Plus in k y + m y'' is Protected.

Out[19]= 0

In[20]:= DSolve[m y''[t] + ky[t] == 0,y[t],t]                                   

Out[20]= {{y[t] -> 
 
                                             ky[K[1]]
>      C[1] + t C[2] + Integrate[Integrate[-(--------), {K[1], 1, K[2]}], 
                                                m
 
>        {K[2], 1, t}]}}

In[21]:= DSolve[{m y''[t] + ky[t] == 0, y[0] == 1, y'[0] == 1},y[t],t] /. {Sqrt[
k]/Sqrt[m] -> }                                                                 

Syntax::sntxf: "ky[t] == 0, y[0] == 1, y'[0] == 1},y[t],t] /. {Sqrt[k]/Sqrt[m]
      -> " cannot be followed by "}".


In[22]:= k = 0.00266;                                                           

In[23]:= eq = {h'[t] == -kSqrt[h[t]],h[0] == 150};                              

In[24]:= sol = DSolve[eq,h[t],t]                                                

DSolve::bvnul: For some branches of the general solution, the given boundary
    conditions lead to an empty solution.

Out[24]= {}

In[25]:= FullSimplify[sol[[1]]]                                                 

Part::partw: Part 1 of {} does not exist.

Out[25]= {}[[1]]

In[26]:= (Sqrt[150] - 0.00133't)^2                                              

                               2
Out[26]= (5 Sqrt[6] - t (0 & ))

In[27]:= eq = {h'[t] = -k1 Sqrt[h[t]],h[0] == h0};                              

In[28]:= sol = FullSimplify[DSolve[eq,h[t],t][[1]]]'                            

DSolve::deqn: Equation or list of equations expected instead of -(k1 Sqrt[h[t]])
     in the first argument {-(k1 Sqrt[h[t]]), h[0] == h0}.

Out[28]= ({-(k1 Sqrt[h[t]]), h0 == h[0]})'

In[29]:= Resolve[ForAll[{h0,k1,t},1/4(-2*Sqrt[h0] + k1t)^2 == (Sqrt[h0] - (k1/2)
*t]^2]                                                                          

Syntax::sntxf: "[ForAll[{h0,k1,t},1/4(-2*Sqrt[h0] + k1t)^2 == (Sqrt[h0] -
      (k1/2)*t" cannot be followed by "]^2]".


In[30]:= Maximize[1-(-2+x)^2 - (-1+x)^4, x] //N                                 

Out[30]= {0.710727, {x -> 1.58975}}

In[31]:= Minimize[2x^4 - 3x^2 + x, x]//N                                        

Out[31]= {-2.0293, {x -> -0.939693}}

In[32]:= Maximize[{((x-3)^3 - 2x^2 - x),-1<x<4},x] //N                          

Out[32]= {-9.3726, {x -> 1.48085}}

In[33]:= Maximize[1-(-2+x)^2 - (-1+x)^4,x]                                      

                                      2       3
Out[33]= {-4 + 8 Root[-4 + 7 #1 - 6 #1  + 2 #1  & , 1] - 
 
                             2       3       2
>     7 Root[-4 + 7 #1 - 6 #1  + 2 #1  & , 1]  + 
 
                             2       3       3
>     4 Root[-4 + 7 #1 - 6 #1  + 2 #1  & , 1]  - 
 
                           2       3       4
>     Root[-4 + 7 #1 - 6 #1  + 2 #1  & , 1] , 
 
                                2       3
>    {x -> Root[-4 + 7 #1 - 6 #1  + 2 #1  & , 1]}}

In[34]:= Maximize[{8 x1 + 11 x2 + 6 x3 + 4 x4, 5 x1 + 7 x2 + 4 x3 + 3 x4 <= 14 &
& x1 < 2 && x2<2 && x3 < 2 && x4 < 2 && Element[x1 | x2 | x3 | x4, Integers]},{x
1,x2,x3,x4}]                                                                    

Out[34]= {21, {x1 -> 1, x2 -> 1, x3 -> 1, x4 -> -1}}

In[35]:= Maximize[{8 x1 + 11 x2 + 6 x3 + 4 x4, 5 x1 + 7 x2 + 4 x3 + 3 x4 <= 14 &
& x1 < 2 && x2<2 && x3 < 2 && x4 < 2},{x1,x2,x3,x4}, Integers]                  

Out[35]= {21, {x1 -> 1, x2 -> 1, x3 -> 1, x4 -> -1}}

In[36]:= Needs["VectorAnalysis`"]                                               

General::obspkg: 
   VectorAnalysis` is now obsolete. The legacy version being loaded may conflict
     with current functionality. See the Compatibility Guide for updating
     information.

In[37]:= CoordinateSystem                                                       

Out[37]= Cartesian

In[38]:= SetCoordinates[Spherical]                                              

Out[38]= Spherical[Rr, Ttheta, Pphi]

In[39]:= CoordinateSystem                                                       

Out[39]= Spherical
